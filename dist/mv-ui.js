var mvUi=angular.module("mvUi.Config",[]).service("mvConfigService",[function(){this.config={component:{btn:{cssClass:"mv-btn"},icon:{cssClass:"mv-icon","default":{prefix:"fa"}}}},this.getConfig=function(){return this.config}}]);angular.module("mvUi.Template",[]).run(["$templateCache",function(n){n.put("directives/mv-pageheader.html",'<h2 class="mv-page-title">\r\n  <span class="title-icon" ng-if="icon">\r\n    <i class="fa fa-{{icon}}"></i>\r\n  </span>\r\n  <span class="title-label">{{title}}</span>\r\n</h2>\r\n<div class="content-wrapper" ng-transclude>\r\n\r\n</div>\r\n'),n.put("directives/mv-switch-nav.html",'<ul>\r\n  <li ng-repeat="slide in slides">\r\n    <button type="button" ng-click="selectSlide(slide.title)">{{slide.title}}</button>\r\n  </li>\r\n</ul>\r\n'),n.put("directives/mv-control/checklist.html",'<mv-i ng-if="enableIcon" name="{{icon}}"></mv-i>\n<label>{{label}}</label>\n<span class="mv-control-value">\n  <strong ng-show="showValue">{{ngModel}}</strong>\n</span>\n<div class="mv-control-button-area">\n  <button class="mv-btn" type="button"\n          ng-switch="setup"\n          ng-click="setupToggle($event)">\n    <mv-i name="angle-down" ng-switch-when="false"></mv-i>\n    <mv-i name="angle-up" ng-switch-when="true"></mv-i>\n  </button>\n</div>\n<mv-container class="mv-control-setup-area" ng-class="{open:setup}">\n  <mv-row ng-repeat="item in options">\n    <mv-col size="{xs:10}">\n      <label for="{{id}}-{{$index}}">{{item.label}}</label>\n    </mv-col>\n    <mv-col size="{xs:2}" class="mv-control-area">\n      <input type="checkbox" class="mv-control-checkbox" id="{{id}}-{{$index}}"\n             ng-click="select($index,item,$event)"/>\n    </mv-col>\n  </mv-row>\n</mv-container>\n\n'),n.put("directives/mv-control/file.html",'<mv-i ng-if="enableIcon" name="{{icon}}"></mv-i>\n<label>{{label}}</label>\n<span class="mv-control-value">\n  <strong  ng-show="showValue">{{value}}</strong>\n</span>\n<div class="mv-control-button-area">\n  <button type="button" class="mv-btn"\n          ng-click="setupToggle($event)">\n    <mv-i name="{{btnIcon}}"></mv-i>\n  </button>\n</div>\n<div class="mv-control-setup-area" ng-class="{open:setup}">\n  <ul>\n    <li ng-if="files.length>0" ng-repeat="file in files">\n      {{file.name}}\n    </li>\n  </ul>\n  <div class="mv-control-file-area">\n    <input type="file" name="fileName"/>\n  </div>\n  <button class="mv-btn mv-control-file-button" type="button" ng-click="upload($event)">\n    <mv-i name="cloud-upload"></mv-i> Upload\n  </button>\n</div>\n'),n.put("directives/mv-control/input.html",'<!--Info (Information)-->\n<mv-i ng-if="enableIcon" name="{{icon}}"></mv-i>\n<label for="{{id}}-control">{{label}}</label>\n<input type="{{type}}" name="{{name}}" id="{{id}}-control" class="mv-control-input"\n       ng-model="ngModel"/>\n<div ng-transclude>\n\n</div>\n'),n.put("directives/mv-control/radiogroup.html",'<mv-i ng-if="enableIcon" name="{{icon}}"></mv-i>\n<label>{{label}}</label>\n<span class="mv-control-value">\n  <strong  ng-show="showValue">{{value}}</strong>\n</span>\n<div class="mv-control-button-area">\n  <button class="mv-btn" type="button"\n          ng-switch="setup"\n          ng-click="setupToggle($event)">\n    <mv-i name="angle-down" ng-switch-when="false"></mv-i>\n    <mv-i name="angle-up" ng-switch-when="true"></mv-i>\n  </button>\n</div>\n<ul class="mv-control-setup-area mv-container-fluid" ng-class="{open:setup}">\n  <li ng-repeat="item in options">\n    <label for="{{id}}-{{$index}}">\n    <mv-row>\n    <div class="mv-col xs-10">\n      {{item.label}}\n    </div>\n    <div class="mv-control-area mv-col xs-2">\n      <input type="radio" name="{{name}}" class="mv-control-radio" id="{{id}}-{{$index}}"\n        ng-click="select($index,item,$event)"/>\n    </div>\n    </mv-row>\n    </label>\n  </li>\n</ul>\n'),n.put("directives/mv-control/select.html",'<mv-i ng-if="enableIcon" name="{{icon}}"></mv-i>\n<label for="{{id}}-control">{{label}}</label>\n<select id="{{id}}-control" name="{{name}}" class="mv-control-select"\n        ng-model="ngModel"\n        ng-options="a.{{col}} for a in options">\n</select>\n<div ng-transclude>\n\n</div>\n'),n.put("directives/mv-control/text.html",'<!--Info (Information)-->\n<mv-i ng-if="enableIcon" name="{{icon}}"></mv-i>\n<label>{{label}}</label>\n<span class="mv-control-value">{{ngModel}}</span>\n<div ng-transclude>\n\n</div>\n'),n.put("directives/mv-control/toggle.html",'<!--<div class="mv-control mv-control-toggle mv-control-button">-->\n  <mv-i ng-if="enableIcon" name="{{icon}}"></mv-i>\n  <label for="{{id}}-control">{{label}}</label>\n\n  <div class="mv-control-value" ng-switch="setup">\n    <span ng-switch-when="false">{{off}}</span>\n    <span ng-switch-when="true">{{on}}</span>\n  </div>\n  <div>\n    <input type="checkbox" id="{{id}}-control" name="toggleName" class="mv-control-toggle"\n           ng-model="ngModel"/>\n  </div>\n  <div class="mv-control-button-area">\n    <button class="mv-btn" type="button"\n            ng-switch="setup"\n            ng-click="setupToggle($event)">\n      <mv-i class="mv-btn-off" name="toggle-off" ng-switch-when="false"></mv-i>\n      <mv-i class="mv-btn-on" name="toggle-on" ng-switch-when="true"></mv-i>\n    </button>\n  </div>\n<!--</div>-->\n')}]),angular.module("mvUi.Button",["mvUi.Button.Btn"]).directive("mvBtnRadio",["$parse",function(){return{restrict:"C",require:["?ngModel"],scope:{active:"@?",value:"@?"},link:function(n,e,t,i){e.addClass("mv-btn");var a=i[0];a&&(n.active=angular.isDefined(n.active)?n.active:"active",a.$render=function(){var t=angular.equals(a.$modelValue,n.$eval(n.value));e.toggleClass("active",t)},e.bind("click",function(t){var i=e.hasClass(n.active);t.preventDefault(),n.$apply(function(){a.$setViewValue(i?null:n.$eval(n.value)),a.$render()})}))}}}]).directive("mvBtnCheckbox",["$parse",function(){return{restrict:"C",require:["?ngModel"],scope:{active:"@?",on:"@?",off:"@?"},controller:["$scope","$element","$attrs",function(n){n.active=angular.isDefined(n.active)?n.active:"active"}],link:function(n,e,t,i){function a(){return o(t.on,!0)}function l(){return o(t.off,!1)}function o(e,t){var i=n.$eval(e);return angular.isDefined(i)?i:t}e.addClass("mv-btn");var s=i[0];s&&(s.$render=function(){e.toggleClass("active",angular.equals(s.$modelValue,a()))},e.bind("click",function(t){t.preventDefault(),n.$apply(function(){s.$setViewValue(e.hasClass("active")?l():a()),s.$render()})}))}}}]),angular.module("mvUi.Control",[]).service("mvControlFileService",["$http",function(n){this.response={},this.setResponse=function(n){return this.response=n,this.response},this.upload=function(e,t){n.post(e,t,{headers:{"Content-Type":"multipart/form-data"}}).success(function(n){return this.setResponse(n)}).error(function(n){return this.setResponse(n)})}}]).controller("MvControlController",["$scope","$element","$attrs",function(n,e){this.mainClass="mv-control",this.setup=!1,this.getSetup=function(){return this.setup},this.genSubClass=function(n){return this.mainClass+"-"+n},this.checkMainClass=function(){e.hasClass(this.mainClass)||e.addClass(this.mainClass)},this.setupFunctionality=function(n){e.addClass("mv-control-"+n)},this.setupToggle=function(n){return n.preventDefault(),this.setup=!this.setup,this.setup},this.init=function(n,e){this.checkMainClass(),angular.forEach(e,function(e){n.addClass(this.genSubClass(e))})}}]),angular.module("mvUi.Core",[]),angular.module("mvUi.Dropdown",[]).directive("mvDropdown",["$document",function(n){return{restrict:"C",controller:["$scope","$element","$attrs",function(n,e){n.isOpen=!1,n.addCaret=function(){var n=angular.element("<i>");return n.addClass("fa"),n.addClass("fa-ellipsis-v"),n},this.open=function(){n.isOpen=!n.isOpen,n.$apply(function(){e.toggleClass("open",n.isOpen)})}}],link:function(e,t,i,a){var l=angular.element(t.children()[0]),o=(angular.element(t.children()[1]),function(e){e&&e.stopPropagation(),a.open(),n.bind("click",a.open)});t.attr({"aria-haspopup":!0,"aria-expanded":!1}),l.append(e.addCaret()),l.bind("click",o),e.$watch("isOpen",function(e){t.attr("aria-expanded",e),e||n.unbind("click",a.open)},!0),e.$on("$destroy",function(){l.unbind("click",e.open),n.unbind("click",a.open)})}}}]),angular.module("mvUi.Grid",[]).directive("mvCol",["$parse","$compile",function(n){return{restrict:"EA",template:"",transclude:!0,controller:["$scope","$element","$attrs",function(n,e){n.layoutObj={},n.produceClass=function(n,t){var i=n+"-"+t;e.addClass(i)},n.produceAdjustmentClass=function(n,t,i){var a=n+"-"+i+"-"+t;e.addClass(a)}}],link:function(e,t,i,a,l){e.layout=angular.isDefined(i.size)?n(i.size)(e):e.layoutObj,e.layoutPush=angular.isDefined(i.push)?n(i.push)(e):e.layoutObj,e.layoutPull=angular.isDefined(i.pull)?n(i.pull)(e):e.layoutObj,t.hasClass("mv-col")||t.addClass("mv-col"),l(e.$parent,function(n){t.append(n)}),0!==Object.keys(e.layout).length&&angular.forEach(e.layout,function(n,t){e.produceClass(t,n)}),0!==Object.keys(e.layoutPush).length&&angular.forEach(e.layoutPush,function(n,t){e.produceAdjustmentClass(t,n,"push")}),0!==Object.keys(e.layoutPull).length&&angular.forEach(e.layoutPull,function(n,t){e.produceAdjustmentClass(t,n,"pull")})}}}]).directive("mvRow",[function(){return{restrict:"EA",template:"",transclude:!0,link:function(n,e,t,i,a){if(n.layoutFill=angular.isDefined(t.fill)?JSON.parse(t.layoutFill):!1,e.append(a()),e.hasClass("mv-row")||e.addClass("mv-row"),n.layoutFill){var l=e[0].offsetHeight;angular.forEach(e[0].children,function(n){angular.element(n).css("height",l+"px")})}}}}]).directive("mvContainer",[function(){return{restrict:"EA",scope:{mode:"@"},link:function(n,e){n.mode=angular.isDefined(n.mode)?n.mode:"",e.addClass("static"===n.mode?"container":"container-fluid")}}}]),angular.module("mvUi.Icon",["mvUi.Icon.Icon","mvUi.Icon.List","mvUi.Icon.Stack"]),angular.module("mvUi.PageHeader",[]).directive("mvPageHeader",["$templateCache",function(n){return{restrict:"C",template:n.get("mv-pageheader.html"),scope:{title:"@",icon:"@"},transclude:!0,link:function(n){n.icon=angular.isDefined(n.icon)?n.icon:!1}}}]),angular.module("mvUi.Progress",[]).directive("mvProgressCirc",["Modernizr",function(n){return{restrict:"A",link:function(e,t){var i=75,a=5,l=t[0];if(n.canvas){var o=angular.element("<p/>");o.attr("style","display:block;position:absolute;padding:1em;top:0;width:"+l.width+"px;"),o.text("Sistema não possui suporte a Canvas"),t.after(o)}else{var s=l.getContext("2d"),r=l.width/2,c=l.height/2,u=l.width/l.height*100-a;s.beginPath(),s.arc(r,c,u,-1.5,Math.PI*(i/50)-1.5,!1),s.lineWidth=a,s.strokeStyle="#ff00cc",s.stroke()}}}}]),angular.module("mvUi.Switch",[]).directive("mvSwitch",["$compile",function(){return{restrict:"EAC",template:"<section ng-transclude></section>",transclude:!0,scope:{ngSwitch:"@"},controller:["$scope","$element","$attrs","$transclude",function(n){n.value="",this.slides=[],this.addSlide=function(n){this.slides.push(n)},this.selectSlide=function(e){n.ngSwitch=e}}],link:function(n,e,t,i){i.slides[0].title}}}]).directive("mvSwitchSlide",["$compile",function(){return{require:"^mvSwitch",restrict:"EAC",template:'<div ng-switch-when="{{title}}" ng-transclude></div>',transclude:!0,scope:{title:"@"},link:function(n,e,t,i){i.addSlide(n)}}}]).directive("mvSwitchNav",["$templateCache",function(n){return{require:"^mvSwitch",restrict:"EAC",template:n.get("mv-switch-nav.html"),transclude:!0,link:function(n,e,t,i){n.slides=i.slides,n.selectSlide=i.selectSlide}}}]),angular.module("mvUi.Tooltip",[]).directive("mvTooltip",[function(){return{restrict:"C",templateUrl:"../../views/directives/mv-pageheader.html",scope:{title:"@",position:"@"},transclude:!0,link:function(n){n.position=angular.isDefined(n.position)?n.position:"top"}}}]),angular.module("mvUi.Button.Btn",[]).directive("mvBtn",["$parse",function(){return{restrict:"A",link:function(n,e,t){n.color=angular.isDefined(t.color)?t.color.toLocaleLowerCase():"default",n.border=angular.isDefined(n.border)?n.border:!1,n.icon=angular.isDefined(t.icon)?t.icon:!1,e.addClass("mv-btn"),e.addClass(n.color),n.border&&e.addClass(n.border),angular.isDefined(t.disabled)&&e.addClass("disabled")}}}]),angular.module("mvUi.Control.Toggle",["mvUi.Control"]).directive("mvToggle",["$templateCache",function(n){return{restrict:"E",template:n.get("mv-control/toggle.html"),scope:{label:"@",icon:"@",off:"@",on:"@",ngModel:"="},transclude:!0,controller:"MvControlController",link:function(n,e,t,i){e.find("input");n.enableIcon=!1,n.setup=angular.isDefined(n.ngModel)?!!n.ngModel:i.getSetup(),n.on=angular.isDefined(n.on)?n.on:"On",n.off=angular.isDefined(n.off)?n.off:"Off",n.setupToggle=function(e){n.setup=i.setupToggle(e),n.ngModel=n.setup},i.checkMainClass(),i.setupFunctionality("toggle"),i.setupFunctionality("button"),angular.isDefined(n.icon)&&(i.setupFunctionality("icon"),n.enableIcon=!0)}}}]),angular.module("mvUi.Icon.Icon",["mvUi.Config"]).directive("mvIcon",["mvConfigService",function(n){return{restrict:"A",scope:{},link:function(e,t,i){var a=n.config.component.icon;if(e.name=angular.isDefined(i.name)?i.name:!1,e.prefix=angular.isDefined(i.prefix)?i.prefix:a.default.prefix,t.addClass(e.prefix),t.addClass(e.prefix+"-"+e.name),angular.isDefined(i.rotate)&&t.addClass(e.prefix+"-rotate-"+i.rotate),angular.isDefined(i.spin)&&t.addClass(e.prefix+"-spin"),angular.isDefined(i.stack)&&t.addClass(e.prefix+"-stack-"+i.stack+"x"),angular.isDefined(i.inverse)&&t.addClass(e.prefix+"-inverse"),angular.isDefined(i.flip)){e.flip=angular.isDefined(i.flip).toLocaleString();var l=e.prefix+"-flip-";switch(e.flip){case"h":t.addClass(l+"horizontal");break;case"v":t.addClass(l+"horizontal");break;case"a":t.addClass(l+"horizontal"),t.addClass(l+"vertical");break;default:t.addClass(l+"horizontal")}}angular.isDefined(i.zoom)&&t.addClass(e.prefix+"-"+i.zoom)}}}]),angular.module("mvUi.Icon.List",["mvUi.Config"]).directive("mvIconList",["mvConfigService",function(n){return{restrict:"A",scope:{},link:function(e,t,i){var a=n.config.component.icon;e.prefix=angular.isDefined(i.prefix)?i.prefix:a.default.prefix,t.addClass(e.prefix+"-ul");var l=t.children();angular.forEach(l,function(n){var t=angular.element(n.firstChild);t.hasClass(e.prefix)&&!t.hasClass(e.prefix+"-li")&&t.addClass(e.prefix+"-li")})}}}]),angular.module("mvUi.Icon.Stack",["mvUi.Config"]).directive("mvIconStack",["mvConfigService",function(n){return{restrict:"A",scope:{grow:"@"},link:function(e,t,i){var a=n.config.component.icon;e.name=angular.isDefined(i.name)?i.name:!1,e.prefix=angular.isDefined(i.prefix)?i.prefix:a.default.prefix,e.grow=angular.isDefined(e.grow)?!!e.grow:!1,t.addClass(e.prefix+"-stack"),t.addClass(e.prefix+"-lg");var l=t.children();angular.forEach(l,function(n,t){n=angular.element(n),e.grow?t+=1:t=2-t,n.addClass(e.prefix+"-stack-"+t+"x")})}}}]);var mvUi=angular.module("mvUi",["ngAnimate","ngCookies","ngResource","ngSanitize","ngTouch","mvUi.Config","mvUi.Core","mvUi.Template","mvUi.Control","mvUi.Control.Toggle","mvUi.Button","mvUi.Dropdown","mvUi.PageHeader","mvUi.Grid","mvUi.Tooltip","mvUi.Icon","mvUi.Switch","mvUi.Progress"]);mvUi.constant("Modernizr",Modernizr);